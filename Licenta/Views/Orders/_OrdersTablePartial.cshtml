@using Licenta.ViewModels.Orders
@model OrderViewModel

<table id="ordersTable" class="table table-striped table-bordered" style="width:100%">
    <thead class="dropdown text-center">
        <tr>
            <th>Pickup Address</th>
            <th>Delivery Address</th>
            <th>Recipient</th>
            @if(User.IsInRole("Dispatcher"))
            {
                <th>User</th>
            }
            <th>Status</th>
            <th>AWB</th>
            <th>Price</th>
            <th style="width:10%">Action</th>
        </tr>
    </thead>
    @{ int i = 0;}
    <tbody>
        @foreach (var order in Model.Orders)
        {
        <tr>

            <td class="dropdown text-center">

                <button class="btn btn-blue dropdown-toggle location-column" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @if(order.PickUpAddress.Tag == null)
                        {
                            @:@order.PickUpAddress.City,@order.PickUpAddress.Street
                        }
                        else
                        {
                            @:@order.PickUpAddress.Tag
                        }
                    </button>

                <div class="dropdown-menu dropdown-menu-style">
                    <div>Country: @order.PickUpAddress.Country</div>
                    <div>City: @order.PickUpAddress.City</div>
                    <div>Street: @order.PickUpAddress.Street</div>
                    <div>Street number: @order.PickUpAddress.StreetNumber</div>
                    <div>Postal Code: @order.PickUpAddress.PostalCode</div>
                </div>
            </td>

            <td class="dropdown text-center">
                <button class="btn btn-blue dropdown-toggle location-column" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">

                    @order.DeliveryAddress.City, @order.DeliveryAddress.Street
                </button>
                <div class="dropdown-menu dropdown-menu-style">
                    <div>Country: @order.DeliveryAddress.Country</div>
                    <div>City: @order.DeliveryAddress.City</div>
                    <div>Street: @order.DeliveryAddress.Street</div>
                    <div>Street number: @order.DeliveryAddress.StreetNumber</div>
                    <div>Postal Code: @order.DeliveryAddress.PostalCode</div>
                </div>
            </td>

            <td class="dropdown text-center">
                <button class="btn btn-blue dropdown-toggle customer-column" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @order.Recipient.Name
                </button>
                <div class="dropdown-menu dropdown-menu-style">
                    <div>Name: @order.Recipient.Name</div>
                    <div>Email: @order.Recipient.ContactDetails.Email</div>
                    <div>Phone number: @order.Recipient.ContactDetails.PhoneNo</div>
                </div>
            </td>
            @if (User.IsInRole("Dispatcher"))
            {
                <td class="dropdown text-center">
                    <button class="btn btn-blue dropdown-toggle customer-column" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @order.Sender.Name
                    </button>
                    <div class="dropdown-menu dropdown-menu-style">
                        <div>Name: @order.Sender.Name</div>
                        <div>Email: @order.Sender.ContactDetails.Email</div>
                        <div>Phone number: @order.Sender.ContactDetails.PhoneNo</div>
                    </div>
                </td>
            }

            <td>@order.Status</td>
            <td>@order.AWB</td>
            <td>@order.Price</td>
            <td style="text-align:center">
                <a href="#my_modal" data-toggle="modal" data-pickup="@order.PickUpAddress.Country @order.PickUpAddress.City @order.PickUpAddress.Street @order.PickUpAddress.StreetNumber @order.PickUpAddress.PostalCode"
        data-delivery="@order.DeliveryAddress.Country @order.DeliveryAddress.City @order.DeliveryAddress.Street @order.DeliveryAddress.StreetNumber @order.DeliveryAddress.PostalCode"><img src="~/img/Icons/map-svgrepo-com.svg" style="width: 40%; height: auto;" title="Show on map"/></a>

            </td>
        </tr>
            i++;
        }
    </tbody>
</table>

<div class="modal " id="my_modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content modal-lg">
            <div class="modal-header">
                <h4 class="modal-title">Order Maps</h4>
            </div>
            <div class="modal-body modal-lg" style="max-width:1000px!important">
                <div id='map' style='width: 40vw; height: 50vh; text-align:center'></div>
                <br />
                <div class="container" style="text-align: center">
                    <div class="align-content-center">
                        <input type="text" name="PickUp" value="" readonly="readonly" style="width:320px" />
                        <input type="text" name="Delivery" value="" readonly="readonly" style="width:320px" />
                    </div>
                </div>
                <script>
                    function initMap(pickup, delivery) {
                        var directionsService = new google.maps.DirectionsService;
                        var directionsDisplay = new google.maps.DirectionsRenderer;
                        var wayPoints = [];
                        
                        var pickupInfo = pickup.split(' ');
                        var deliveryInfo = delivery.split(' ');
                        var wp1 = {
                            location: pickupInfo[3] + " " + pickupInfo[2] + "," + pickupInfo[1],
                            stopover: true
                        }
                        var wp2 = {
                            location: deliveryInfo[3] + " " + deliveryInfo[2] + "," + deliveryInfo[1],
                            stopover: true
                        }
                        wayPoints.push(wp1);
                        wayPoints.push(wp2);
                        var map = new google.maps.Map(document.getElementById('map'), {
                            zoom: 15,
                            center: { lat: 41.85, lng: -87.65 }
                        });
                        directionsDisplay.setMap(map);
                        directionsService.route({
                            origin: pickupInfo[2] + " " + pickupInfo[3] + "," + pickupInfo[1],
                            destination: deliveryInfo[2] + " " + deliveryInfo[3] + "," + deliveryInfo[1],
                            waypoints: wayPoints,
                            travelMode: 'DRIVING'
                        }, function (response, status) {
                            if (status === 'OK') {
                                directionsDisplay.setDirections(response);
                            } else {
                                window.alert('Directions request failed due to ' + status);
                            }
                        });
                    }
                </script>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyATACiagMRa_E-mO09VLV4_TwssE6XqIAQ&callback=initMap">
</script>




<script defer type='text/javascript'>
    var PickUp = null;
    var Delivery = null;
    $('#my_modal').on('show.bs.modal', function (e) {
        PickUp = $(e.relatedTarget).data('pickup');
        Delivery = $(e.relatedTarget).data('delivery');
        initMap(PickUp, Delivery);
        $(e.currentTarget).find('input[name="PickUp"]').val(PickUp);
        $(e.currentTarget).find('input[name="Delivery"]').val(Delivery);

    });

    function sendValueToController(value) {


        $.ajax({
            url: '/Orders/ActionName/',
            data: { YourValue: value },
            cache: false,
            type: "POST",
            dataType: "json",
            success: function (result) {
                console.log(result);
                alert('Successfully called');
                alert(result);
                if (result.Success) { // this sets the value from the response
                    loadMapScenario(result);
                } else {
                    alert("failed");
                }
            }
        });
    }

    

</script>

<script defer type='text/javascript'>

</script>
<script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?key=Atq9al1eZ_dVfCM891ShPaSWtruHU1Rfnci9qUrSaj5aOpzGCmggHaVuuj_5t7wY&callback=loadMapScenario' async defer></script>

